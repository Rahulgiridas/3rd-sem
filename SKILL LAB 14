#include <stdio.h>
#define N 12
void updateFenwickTree(int BIT[], int index, int value)
{
    index++; 
    while (index <= N)
    {
        BIT[index] += value;
        index += index & -index; 
    }
}
void constructFenwickTree(int arr[], int BIT[])
{
    for (int i = 0; i < N; i++)
    {
        updateFenwickTree(BIT, i, arr[i]);
    }
}
int query(int BIT[], int index)
{
    index++;  
    int sum = 0;
    while (index > 0)
    {
        sum += BIT[index];
        index -= index & -index;  
    }
    return sum;
}
void printFenwickTree(int BIT[]) 
{
    printf("Fenwick Tree (Binary Indexed Tree):\n");
    for (int i = 1; i <= N; i++)
    {
        printf("%d ", BIT[i]);
    }
    printf("\n");
}
int main() 
{
    int arr[] = {2, 1, 1, 3, 2, 3, 4, 5, 6, 7, 8, 9};
    int BIT[N + 1] = {0};
    constructFenwickTree(arr, BIT);
    printFenwickTree(BIT);
    printf("Prefix sum up to index 5: %d\n", query(BIT, 5));
    printf("Prefix sum up to index 9: %d\n", query(BIT, 9));
    return 0;
}
